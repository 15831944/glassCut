#if !defined(AFX_GRIDCAD_H__600C5006_0686_4B69_8998_1FA2E73FB659__INCLUDED_)
#define AFX_GRIDCAD_H__600C5006_0686_4B69_8998_1FA2E73FB659__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CGridCAD wrapper class

class CGridCAD : public CWnd
{
protected:
	DECLARE_DYNCREATE(CGridCAD)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xa8ef673, 0xafde, 0x4ffb, { 0x9f, 0xa8, 0x34, 0x41, 0x68, 0xf6, 0x14, 0x24 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	short GetAppearance();
	void SetAppearance(short);
	short GetNSpace();
	void SetNSpace(short);
	double GetDGridSpace();
	void SetDGridSpace(double);
	BOOL GetDisplayGrid();
	void SetDisplayGrid(BOOL);
	short GetNCurrGraph();
	void SetNCurrGraph(short);
	long GetSetCompList();
	void SetSetCompList(long);
	short GetNSignLine();
	void SetNSignLine(short);
	unsigned long GetClrSignLine();
	void SetClrSignLine(unsigned long);
	unsigned long GetClrRuler();
	void SetClrRuler(unsigned long);
	short GetNScrollMaxPos();
	void SetNScrollMaxPos(short);
	short GetNScrollMinPos();
	void SetNScrollMinPos(short);
	short GetNScrollCurrWidthPos();
	void SetNScrollCurrWidthPos(short);
	short GetNScrollCurrHeightPos();
	void SetNScrollCurrHeightPos(short);
	unsigned long GetClrSplineCurve();
	void SetClrSplineCurve(unsigned long);
	short GetNPenWidthLine();
	void SetNPenWidthLine(short);

// Operations
public:
	long GetGraph();
	short GetPointCounts();
	short GetGraphCounts();
	short SetArc();
	void DelData();
	void DelAllData();
	short SetData(double dDataX, double dDataY);
	void AddGraphList();
	void DelCurrGraph();
	long GetGraphList();
	void ReDraw();
	void SaveGCode(LPCTSTR strFile);
	void SetHeadandTail(LPCTSTR strHead, LPCTSTR strTail);
	void SetUpandDown(LPCTSTR strUp, LPCTSTR strDown);
	double GridToParameter(BOOL dX, double dValue);
	double ParameterToGrid(BOOL dX, double dValue);
	void RefreshArcInfo();
	long GetCurrPosition();
	long SetCurrentCurve(short iGraphCount, short iCurveCount);
	void SetSpline(short nIndex, short nStyle);
	void OpenSCRFile(LPCTSTR strOpenFileName);
	void SaveSCRFile(LPCTSTR strFileName);
	void SetProtectArea(short nCount);
	void ShowCutterList(long nCutterList);
	short SetStringCommand(LPCTSTR strCommand);
	void ReverseGraph();
	void ChangeStart();
	void PickUpBeginPos(short nStart);
	void ListForward();
	void ListBackWard();
	void SortListStart(short nStart);
	short MovePostion(double dMoveX, double dMoveY);
	short ZoomInOut(double dValueX, double dValueY);
	short SetCheckList(short* pCheck, short nCount);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_GRIDCAD_H__600C5006_0686_4B69_8998_1FA2E73FB659__INCLUDED_)
